openapi: 3.0.2
x-stoplight:
  id: 20cuxse5br3es
info:
  title: Medewerkers Register
  version: V1.0
  description: |
    API Details

    Het Medewerker Registratie Component bevat medewerkers en de daarbij behorende HRM systematiek, hierbij kan bijvoorbeeld worden gedacht aan contractmanagement en functie of competentie overzichten. Deze functionaliteit wordt eigenlijk onttrokken aan de e-HRM norm (ofwel de HR-XML standaard, in Nederland losjes ge√Ømplementeerd als SETU). Waarbij het stuk portfolio opbouw is losgetrokken en in het Portfolio Component zit (om de e-portfolio norm te ondersteunen). Naast het simpelweg bijhouden van medewerkers is dit component echter ook bedoeld als HR tool met betrekking tot groei ambities in de trant van competenties en vaardigheden. Gecombineerd met het Portfolio Component kan het daarmee ook de basis vormen voor coachings- en of onderwijssystemen, waarbij bepaalde leer of groei doelen worden bijgehouden.         
paths:
  /applications:
    get:
      tags:
        - Application
      operationId: getApplicationCollection
      summary: Retrieves the collection of Application resources.
      responses:
        '200':
          description: Application collection response
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Application'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Application'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
      parameters:
        - name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[motivation]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: employee.id
          in: query
          required: false
          schema:
            type: string
        - name: 'employee.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: jobPosting.id
          in: query
          required: false
          schema:
            type: string
        - name: 'jobPosting.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: page
          in: query
          required: false
          description: The collection page number
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: The number of items per page
          schema:
            type: integer
            default: 30
            minimum: 0
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
    post:
      tags:
        - Application
      operationId: postApplicationCollection
      summary: Creates a Application resource.
      responses:
        '201':
          description: Application resource created
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application'
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application'
            text/html:
              schema:
                $ref: '#/components/schemas/Application'
          links:
            GetApplicationItem:
              parameters:
                id: $response.body#/id
              operationId: getApplicationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /applications/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Application'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Application'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Application'
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Application'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Application'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application'
          text/html:
            schema:
              $ref: '#/components/schemas/Application'
        description: The new Application resource
      parameters:
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
  '/applications/{id}':
    get:
      tags:
        - Application
      operationId: getApplicationItem
      summary: Retrieves a Application resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
      responses:
        '200':
          description: Application resource response
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application'
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application'
            text/html:
              schema:
                $ref: '#/components/schemas/Application'
        '404':
          description: Resource not found
    delete:
      tags:
        - Application
      operationId: deleteApplicationItem
      summary: Removes the Application resource.
      responses:
        '204':
          description: Application resource deleted
        '404':
          description: Resource not found
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
    put:
      tags:
        - Application
      operationId: putApplicationItem
      summary: Replaces the Application resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Application resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application'
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application'
            text/html:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Application'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Application'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Application'
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Application'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Application'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application'
          text/html:
            schema:
              $ref: '#/components/schemas/Application'
        description: The updated Application resource
    patch:
      tags:
        - Application
      operationId: patchApplicationItem
      summary: Updates the Application resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Application resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application'
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application'
            text/html:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application'
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Application'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Application'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application'
          text/html:
            schema:
              $ref: '#/components/schemas/Application'
        description: The updated Application resource
  /competences:
    get:
      tags:
        - Competence
      operationId: getCompetenceCollection
      summary: Retrieves the collection of Competence resources.
      responses:
        '200':
          description: Competence collection response
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Competence'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Competence'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competence'
      parameters:
        - name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[grade]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: string
        - name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: grade
          in: query
          required: false
          schema:
            type: string
        - name: 'grade[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: dateCreated
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        - name: dateModified
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: The collection page number
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: The number of items per page
          schema:
            type: integer
            default: 30
            minimum: 0
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
    post:
      tags:
        - Competence
      operationId: postCompetenceCollection
      summary: Creates a Competence resource.
      responses:
        '201':
          description: Competence resource created
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Competence'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Competence'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Competence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Competence'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Competence'
            text/csv:
              schema:
                $ref: '#/components/schemas/Competence'
            text/html:
              schema:
                $ref: '#/components/schemas/Competence'
          links:
            GetCompetenceItem:
              parameters:
                id: $response.body#/id
              operationId: getCompetenceItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /competences/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Competence'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Competence'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Competence'
          application/json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Competence'
          application/xml:
            schema:
              $ref: '#/components/schemas/Competence'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Competence'
          text/csv:
            schema:
              $ref: '#/components/schemas/Competence'
          text/html:
            schema:
              $ref: '#/components/schemas/Competence'
        description: The new Competence resource
      parameters:
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
  '/competences/{id}':
    get:
      tags:
        - Competence
      operationId: getCompetenceItem
      summary: Retrieves a Competence resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
      responses:
        '200':
          description: Competence resource response
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Competence'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Competence'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Competence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Competence'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Competence'
            text/csv:
              schema:
                $ref: '#/components/schemas/Competence'
            text/html:
              schema:
                $ref: '#/components/schemas/Competence'
        '404':
          description: Resource not found
    delete:
      tags:
        - Competence
      operationId: deleteCompetenceItem
      summary: Removes the Competence resource.
      responses:
        '204':
          description: Competence resource deleted
        '404':
          description: Resource not found
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
    put:
      tags:
        - Competence
      operationId: putCompetenceItem
      summary: Replaces the Competence resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Competence resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Competence'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Competence'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Competence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Competence'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Competence'
            text/csv:
              schema:
                $ref: '#/components/schemas/Competence'
            text/html:
              schema:
                $ref: '#/components/schemas/Competence'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Competence'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Competence'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Competence'
          application/json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Competence'
          application/xml:
            schema:
              $ref: '#/components/schemas/Competence'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Competence'
          text/csv:
            schema:
              $ref: '#/components/schemas/Competence'
          text/html:
            schema:
              $ref: '#/components/schemas/Competence'
        description: The updated Competence resource
    patch:
      tags:
        - Competence
      operationId: patchCompetenceItem
      summary: Updates the Competence resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-V
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Competence resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Competence'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Competence'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Competence'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Competence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Competence'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Competence'
            text/csv:
              schema:
                $ref: '#/components/schemas/Competence'
            text/html:
              schema:
                $ref: '#/components/schemas/Competence'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Competence'
          application/xml:
            schema:
              $ref: '#/components/schemas/Competence'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Competence'
          text/csv:
            schema:
              $ref: '#/components/schemas/Competence'
          text/html:
            schema:
              $ref: '#/components/schemas/Competence'
        description: The updated Competence resource
  /contracts:
    get:
      tags:
        - Contract
      operationId: getContractCollection
      summary: Retrieves the collection of Contract resources.
      responses:
        '200':
          description: Contract collection response
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Contract'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Contract'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
      parameters:
        - name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[employer]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[organization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[standardHours]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[agreement]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[jobFunction]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[duration]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[salary]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: string
        - name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: employer
          in: query
          required: false
          schema:
            type: string
        - name: 'employer[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: organization
          in: query
          required: false
          schema:
            type: string
        - name: 'organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: standardHours
          in: query
          required: false
          schema:
            type: integer
        - name: 'standardHours[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        - name: agreement
          in: query
          required: false
          schema:
            type: string
        - name: 'agreement[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: jobFunction
          in: query
          required: false
          schema:
            type: string
        - name: 'jobFunction[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: duration
          in: query
          required: false
          schema:
            type: integer
        - name: 'duration[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        - name: salary
          in: query
          required: false
          schema:
            type: integer
        - name: 'salary[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        - name: dateCreated
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        - name: dateModified
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: The collection page number
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: The number of items per page
          schema:
            type: integer
            default: 30
            minimum: 0
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
    post:
      tags:
        - Contract
      operationId: postContractCollection
      summary: Creates a Contract resource.
      responses:
        '201':
          description: Contract resource created
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Contract'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Contract'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Contract'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contract'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Contract'
            text/csv:
              schema:
                $ref: '#/components/schemas/Contract'
            text/html:
              schema:
                $ref: '#/components/schemas/Contract'
          links:
            GetContractItem:
              parameters:
                id: $response.body#/id
              operationId: getContractItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /contracts/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Contract'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Contract'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Contract'
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Contract'
          application/xml:
            schema:
              $ref: '#/components/schemas/Contract'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Contract'
          text/csv:
            schema:
              $ref: '#/components/schemas/Contract'
          text/html:
            schema:
              $ref: '#/components/schemas/Contract'
        description: The new Contract resource
      parameters:
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
  '/contracts/{id}':
    get:
      tags:
        - Contract
      operationId: getContractItem
      summary: Retrieves a Contract resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
      responses:
        '200':
          description: Contract resource response
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Contract'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Contract'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Contract'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contract'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Contract'
            text/csv:
              schema:
                $ref: '#/components/schemas/Contract'
            text/html:
              schema:
                $ref: '#/components/schemas/Contract'
        '404':
          description: Resource not found
    delete:
      tags:
        - Contract
      operationId: deleteContractItem
      summary: Removes the Contract resource.
      responses:
        '204':
          description: Contract resource deleted
        '404':
          description: Resource not found
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
    put:
      tags:
        - Contract
      operationId: putContractItem
      summary: Replaces the Contract resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Contract resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Contract'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Contract'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Contract'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contract'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Contract'
            text/csv:
              schema:
                $ref: '#/components/schemas/Contract'
            text/html:
              schema:
                $ref: '#/components/schemas/Contract'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Contract'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Contract'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Contract'
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Contract'
          application/xml:
            schema:
              $ref: '#/components/schemas/Contract'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Contract'
          text/csv:
            schema:
              $ref: '#/components/schemas/Contract'
          text/html:
            schema:
              $ref: '#/components/schemas/Contract'
        description: The updated Contract resource
    patch:
      tags:
        - Contract
      operationId: patchContractItem
      summary: Updates the Contract resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Contract resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Contract'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Contract'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Contract'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Contract'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contract'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Contract'
            text/csv:
              schema:
                $ref: '#/components/schemas/Contract'
            text/html:
              schema:
                $ref: '#/components/schemas/Contract'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/xml:
            schema:
              $ref: '#/components/schemas/Contract'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Contract'
          text/csv:
            schema:
              $ref: '#/components/schemas/Contract'
          text/html:
            schema:
              $ref: '#/components/schemas/Contract'
        description: The updated Contract resource
  /education:
    get:
      tags:
        - Education
      operationId: getEducationCollection
      summary: Retrieves the collection of Education resources.
      responses:
        '200':
          description: Education collection response
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Education'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Education'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
      parameters:
        - name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[startDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[endDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[institution]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[degreeGrantedStatus]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[iscedEducationLevelCode]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'startDate[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'startDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'startDate[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'startDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'endDate[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'endDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'endDate[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'endDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: string
        - name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: startDate
          in: query
          required: false
          schema:
            type: string
        - name: 'startDate[]'
          in: query
          required: false
          schema:
            type: string
        - name: endDate
          in: query
          required: false
          schema:
            type: string
        - name: 'endDate[]'
          in: query
          required: false
          schema:
            type: string
        - name: institution
          in: query
          required: false
          schema:
            type: string
        - name: 'institution[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: degreeGrantedStatus
          in: query
          required: false
          schema:
            type: string
        - name: 'degreeGrantedStatus[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: iscedEducationLevelCode
          in: query
          required: false
          schema:
            type: string
        - name: 'iscedEducationLevelCode[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: page
          in: query
          required: false
          description: The collection page number
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: The number of items per page
          schema:
            type: integer
            default: 30
            minimum: 0
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
    post:
      tags:
        - Education
      operationId: postEducationCollection
      summary: Creates a Education resource.
      responses:
        '201':
          description: Education resource created
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education'
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education'
            text/html:
              schema:
                $ref: '#/components/schemas/Education'
          links:
            GetEducationItem:
              parameters:
                id: $response.body#/id
              operationId: getEducationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /education/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Education'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Education'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Education'
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Education'
          application/xml:
            schema:
              $ref: '#/components/schemas/Education'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Education'
          text/csv:
            schema:
              $ref: '#/components/schemas/Education'
          text/html:
            schema:
              $ref: '#/components/schemas/Education'
        description: The new Education resource
      parameters:
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
  '/education/{id}':
    get:
      tags:
        - Education
      operationId: getEducationItem
      summary: Retrieves a Education resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
      responses:
        '200':
          description: Education resource response
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education'
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education'
            text/html:
              schema:
                $ref: '#/components/schemas/Education'
        '404':
          description: Resource not foun
    put:
      tags:
        - Education
      operationId: putEducationItem
      summary: Replaces the Education resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Education resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education'
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education'
            text/html:
              schema:
                $ref: '#/components/schemas/Education'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Education'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Education'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Education'
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Education'
          application/xml:
            schema:
              $ref: '#/components/schemas/Education'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Education'
          text/csv:
            schema:
              $ref: '#/components/schemas/Education'
          text/html:
            schema:
              $ref: '#/components/schemas/Education'
        description: The updated Education resource
    delete:
      tags:
        - Education
      operationId: deleteEducationItem
      summary: Removes the Education resource.
      responses:
        '204':
          description: Education resource deleted
        '404':
          description: Resource not found
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
  /employees:
    get:
      tags:
        - Employee
      operationId: getEmployeeCollection
      summary: Retrieves the collection of Employee resources.
      responses:
        '200':
          description: Employee collection response
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Employee'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Employee'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
      parameters:
        - name: hasPoliceCertificate
          in: query
          required: false
          schema:
            type: boolean
        - name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[person]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[organization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[hasPoliceCertificate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: person
          in: query
          required: false
          schema:
            type: string
        - name: 'person[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: organization
          in: query
          required: false
          schema:
            type: string
        - name: 'organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: page
          in: query
          required: false
          description: The collection page number
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: The number of items per page
          schema:
            type: integer
            default: 30
            minimum: 0
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
    post:
      tags:
        - Employee
      operationId: postEmployeeCollection
      summary: Creates a Employee resource.
      responses:
        '201':
          description: Employee resource created
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee'
          links:
            GetEmployeeItem:
              parameters:
                id: $response.body#/id
              operationId: getEmployeeItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee'
        description: The new Employee resource
  '/employees/{id}':
    get:
      tags:
        - Employee
      operationId: getEmployeeItem
      summary: Retrieves a Employee resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
      responses:
        '200':
          description: Employee resource response
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Resource not found
    put:
      tags:
        - Employee
      operationId: putEmployeeItem
      summary: Replaces the Employee resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Employee resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee'
        description: The updated Employee resource
    delete:
      tags:
        - Employee
      operationId: deleteEmployeeItem
      summary: Removes the Employee resource.
      responses:
        '204':
          description: Employee resource deleted
        '404':
          description: Resource not found
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
  /goals:
    get:
      tags:
        - Goal
      operationId: getGoalCollection
      summary: Retrieves the collection of Goal resources.
      responses:
        '200':
          description: Goal collection response
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Goal'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Goal'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal'
      parameters:
        - name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[priority]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: string
        - name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: priority
          in: query
          required: false
          schema:
            type: string
        - name: 'priority[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: status
          in: query
          required: false
          schema:
            type: string
        - name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: dateCreated
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        - name: dateModified
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: The collection page number
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: The number of items per page
          schema:
            type: integer
            default: 30
            minimum: 0
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
    post:
      tags:
        - Goal
      operationId: postGoalCollection
      summary: Creates a Goal resource.
      responses:
        '201':
          description: Goal resource created
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Goal'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Goal'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Goal'
            application/xml:
              schema:
                $ref: '#/components/schemas/Goal'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Goal'
            text/csv:
              schema:
                $ref: '#/components/schemas/Goal'
            text/html:
              schema:
                $ref: '#/components/schemas/Goal'
          links:
            GetGoalItem:
              parameters:
                id: $response.body#/id
              operationId: getGoalItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /goals/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Goal'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Goal'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Goal'
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Goal'
          application/xml:
            schema:
              $ref: '#/components/schemas/Goal'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Goal'
          text/csv:
            schema:
              $ref: '#/components/schemas/Goal'
          text/html:
            schema:
              $ref: '#/components/schemas/Goal'
        description: The new Goal resource
  '/goals/{id}':
    get:
      tags:
        - Goal
      operationId: getGoalItem
      summary: Retrieves a Goal resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
      responses:
        '200':
          description: Goal resource response
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Goal'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Goal'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Goal'
            application/xml:
              schema:
                $ref: '#/components/schemas/Goal'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Goal'
            text/csv:
              schema:
                $ref: '#/components/schemas/Goal'
            text/html:
              schema:
                $ref: '#/components/schemas/Goal'
        '404':
          description: Resource not found
    delete:
      tags:
        - Goal
      operationId: deleteGoalItem
      summary: Removes the Goal resource.
      responses:
        '204':
          description: Goal resource deleted
        '404':
          description: Resource not found
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Goal
      operationId: putGoalItem
      summary: Replaces the Goal resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Goal resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Goal'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Goal'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Goal'
            application/xml:
              schema:
                $ref: '#/components/schemas/Goal'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Goal'
            text/csv:
              schema:
                $ref: '#/components/schemas/Goal'
            text/html:
              schema:
                $ref: '#/components/schemas/Goal'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Goal'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Goal'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Goal'
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Goal'
          application/xml:
            schema:
              $ref: '#/components/schemas/Goal'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Goal'
          text/csv:
            schema:
              $ref: '#/components/schemas/Goal'
          text/html:
            schema:
              $ref: '#/components/schemas/Goal'
        description: The updated Goal resource
    patch:
      tags:
        - Goal
      operationId: patchGoalItem
      summary: Updates the Goal resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Goal resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Goal'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Goal'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Goal'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Goal'
            application/xml:
              schema:
                $ref: '#/components/schemas/Goal'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Goal'
            text/csv:
              schema:
                $ref: '#/components/schemas/Goal'
            text/html:
              schema:
                $ref: '#/components/schemas/Goal'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/xml:
            schema:
              $ref: '#/components/schemas/Goal'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Goal'
          text/csv:
            schema:
              $ref: '#/components/schemas/Goal'
          text/html:
            schema:
              $ref: '#/components/schemas/Goal'
        description: The updated Goal resource
  /interests:
    get:
      tags:
        - Interest
      operationId: getInterestCollection
      summary: Retrieves the collection of Interest resources.
      responses:
        '200':
          description: Interest collection response
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Interest'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Interest'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest'
      parameters:
        - name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: string
        - name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: dateCreated
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        - name: dateModified
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: The collection page number
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: The number of items per page
          schema:
            type: integer
            default: 30
            minimum: 0
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
    post:
      tags:
        - Interest
      operationId: postInterestCollection
      summary: Creates a Interest resource.
      responses:
        '201':
          description: Interest resource created
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Interest'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Interest'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Interest'
            application/xml:
              schema:
                $ref: '#/components/schemas/Interest'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Interest'
            text/csv:
              schema:
                $ref: '#/components/schemas/Interest'
            text/html:
              schema:
                $ref: '#/components/schemas/Interest'
          links:
            GetInterestItem:
              parameters:
                id: $response.body#/id
              operationId: getInterestItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /interests/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Interest'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Interest'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Interest'
          application/json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Interest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Interest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Interest'
          text/csv:
            schema:
              $ref: '#/components/schemas/Interest'
          text/html:
            schema:
              $ref: '#/components/schemas/Interest'
        description: The new Interest resource
  '/interests/{id}':
    get:
      tags:
        - Interest
      operationId: getInterestItem
      summary: Retrieves a Interest resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
      responses:
        '200':
          description: Interest resource response
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Interest'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Interest'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Interest'
            application/xml:
              schema:
                $ref: '#/components/schemas/Interest'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Interest'
            text/csv:
              schema:
                $ref: '#/components/schemas/Interest'
            text/html:
              schema:
                $ref: '#/components/schemas/Interest'
        '404':
          description: Resource not found
    delete:
      tags:
        - Interest
      operationId: deleteInterestItem
      summary: Removes the Interest resource.
      responses:
        '204':
          description: Interest resource deleted
        '404':
          description: Resource not found
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Interest
      operationId: putInterestItem
      summary: Replaces the Interest resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Interest resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Interest'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Interest'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Interest'
            application/xml:
              schema:
                $ref: '#/components/schemas/Interest'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Interest'
            text/csv:
              schema:
                $ref: '#/components/schemas/Interest'
            text/html:
              schema:
                $ref: '#/components/schemas/Interest'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Interest'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Interest'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Interest'
          application/json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Interest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Interest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Interest'
          text/csv:
            schema:
              $ref: '#/components/schemas/Interest'
          text/html:
            schema:
              $ref: '#/components/schemas/Interest'
        description: The updated Interest resource
    patch:
      tags:
        - Interest
      operationId: patchInterestItem
      summary: Updates the Interest resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Interest resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Interest'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Interest'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Interest'
            application/xml:
              schema:
                $ref: '#/components/schemas/Interest'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Interest'
            text/csv:
              schema:
                $ref: '#/components/schemas/Interest'
            text/html:
              schema:
                $ref: '#/components/schemas/Interest'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Interest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Interest'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Interest'
          text/csv:
            schema:
              $ref: '#/components/schemas/Interest'
          text/html:
            schema:
              $ref: '#/components/schemas/Interest'
        description: The updated Interest resource
  /job_functions:
    get:
      tags:
        - JobFunction
      operationId: getJobFunctionCollection
      summary: Retrieves the collection of JobFunction resources.
      responses:
        '200':
          description: JobFunction collection response
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/JobFunction'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/JobFunction'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFunction'
      parameters:
        - name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[esco]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: string
        - name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: dateCreated
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        - name: dateModified
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        - name: esco
          in: query
          required: false
          schema:
            type: string
        - name: 'esco[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: page
          in: query
          required: false
          description: The collection page number
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: The number of items per page
          schema:
            type: integer
            default: 30
            minimum: 0
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
    post:
      tags:
        - JobFunction
      operationId: postJobFunctionCollection
      summary: Creates a JobFunction resource.
      responses:
        '201':
          description: JobFunction resource created
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobFunction'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobFunction'
            text/html:
              schema:
                $ref: '#/components/schemas/JobFunction'
          links:
            GetJobFunctionItem:
              parameters:
                id: $response.body#/id
              operationId: getJobFunctionItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /job_functions/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/health+json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/json+health:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/xml:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/JobFunction'
          text/csv:
            schema:
              $ref: '#/components/schemas/JobFunction'
          text/html:
            schema:
              $ref: '#/components/schemas/JobFunction'
        description: The new JobFunction resource
  '/job_functions/{id}':
    get:
      tags:
        - JobFunction
      operationId: getJobFunctionItem
      summary: Retrieves a JobFunction resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
      responses:
        '200':
          description: JobFunction resource response
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobFunction'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobFunction'
            text/html:
              schema:
                $ref: '#/components/schemas/JobFunction'
        '404':
          description: Resource not found
    delete:
      tags:
        - JobFunction
      operationId: deleteJobFunctionItem
      summary: Removes the JobFunction resource.
      responses:
        '204':
          description: JobFunction resource deleted
        '404':
          description: Resource not found
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - JobFunction
      operationId: putJobFunctionItem
      summary: Replaces the JobFunction resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: JobFunction resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobFunction'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobFunction'
            text/html:
              schema:
                $ref: '#/components/schemas/JobFunction'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/health+json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/json+health:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/xml:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/JobFunction'
          text/csv:
            schema:
              $ref: '#/components/schemas/JobFunction'
          text/html:
            schema:
              $ref: '#/components/schemas/JobFunction'
        description: The updated JobFunction resource
    patch:
      tags:
        - JobFunction
      operationId: patchJobFunctionItem
      summary: Updates the JobFunction resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: JobFunction resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobFunction'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobFunction'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobFunction'
            text/html:
              schema:
                $ref: '#/components/schemas/JobFunction'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/JobFunction'
          application/xml:
            schema:
              $ref: '#/components/schemas/JobFunction'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/JobFunction'
          text/csv:
            schema:
              $ref: '#/components/schemas/JobFunction'
          text/html:
            schema:
              $ref: '#/components/schemas/JobFunction'
        description: The updated JobFunction resource
  /job_postings:
    get:
      tags:
        - JobPosting
      operationId: getJobPostingCollection
      summary: Retrieves the collection of JobPosting resources.
      responses:
        '200':
          description: JobPosting collection response
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/JobPosting'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/JobPosting'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPosting'
      parameters:
        - name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[title]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[employmentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[educationRequirements]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[summary]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[baseSalary]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[salaryCurrency]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[jobLocationType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[hiringOrganization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[jobStartDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[validThrough]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[standardHours]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'jobStartDate[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'jobStartDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'jobStartDate[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'jobStartDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'validThrough[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'validThrough[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'validThrough[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'validThrough[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: hiringOrganization
          in: query
          required: false
          schema:
            type: string
        - name: 'hiringOrganization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: employmentType
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: The collection page number
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: The number of items per page
          schema:
            type: integer
            default: 30
            minimum: 0
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
    post:
      tags:
        - JobPosting
      operationId: postJobPostingCollection
      summary: Creates a JobPosting resource.
      responses:
        '201':
          description: JobPosting resource created
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobPosting'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobPosting'
            text/html:
              schema:
                $ref: '#/components/schemas/JobPosting'
          links:
            GetJobPostingItem:
              parameters:
                id: $response.body#/id
              operationId: getJobPostingItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /job_postings/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/json:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/health+json:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/json+health:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/xml:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/JobPosting'
          text/csv:
            schema:
              $ref: '#/components/schemas/JobPosting'
          text/html:
            schema:
              $ref: '#/components/schemas/JobPosting'
        description: The new JobPosting resource
  '/job_postings/{id}':
    get:
      tags:
        - JobPosting
      operationId: getJobPostingItem
      summary: Retrieves a JobPosting resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
      responses:
        '200':
          description: JobPosting resource response
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobPosting'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobPosting'
            text/html:
              schema:
                $ref: '#/components/schemas/JobPosting'
        '404':
          description: Resource not found
    put:
      tags:
        - JobPosting
      operationId: putJobPostingItem
      summary: Replaces the JobPosting resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: JobPosting resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/health+json:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/json+health:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobPosting'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/JobPosting'
            text/csv:
              schema:
                $ref: '#/components/schemas/JobPosting'
            text/html:
              schema:
                $ref: '#/components/schemas/JobPosting'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/json:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/health+json:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/json+health:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/xml:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/JobPosting'
          text/csv:
            schema:
              $ref: '#/components/schemas/JobPosting'
          text/html:
            schema:
              $ref: '#/components/schemas/JobPosting'
        description: The updated JobPosting resource
    delete:
      tags:
        - JobPosting
      operationId: deleteJobPostingItem
      summary: Removes the JobPosting resource.
      responses:
        '204':
          description: JobPosting resource deleted
        '404':
          description: Resource not found
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
  /skills:
    get:
      tags:
        - Skill
      operationId: getSkillCollection
      summary: Retrieves the collection of Skill resources.
      responses:
        '200':
          description: Skill collection response
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Skill'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member':
                    type: array
                    items:
                      $ref: '#/components/schemas/Skill'
                  'hydra:totalItems':
                    type: integer
                    minimum: 0
                  'hydra:view':
                    type: object
                    properties:
                      '@id':
                        type: string
                        format: iri-reference
                      '@type':
                        type: string
                      'hydra:first':
                        type: string
                        format: iri-reference
                      'hydra:last':
                        type: string
                        format: iri-reference
                      'hydra:next':
                        type: string
                        format: iri-reference
                  'hydra:search':
                    type: object
                    properties:
                      '@type':
                        type: string
                      'hydra:template':
                        type: string
                      'hydra:variableRepresentation':
                        type: string
                      'hydra:mapping':
                        type: array
                        items:
                          type: object
                          properties:
                            '@type':
                              type: string
                            variable:
                              type: string
                            property:
                              type: string
                              nullable: true
                            required:
                              type: boolean
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
      parameters:
        - name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[level]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'order[esco]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: string
        - name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: level
          in: query
          required: false
          schema:
            type: string
        - name: 'level[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: dateCreated
          in: query
          required: false
          schema:
            type: string
        - name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        - name: dateModified
          in: query
          required: false
          schema:
            type: string
        - name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        - name: esco
          in: query
          required: false
          schema:
            type: string
        - name: 'esco[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: page
          in: query
          required: false
          description: The collection page number
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: The number of items per page
          schema:
            type: integer
            default: 30
            minimum: 0
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
    post:
      tags:
        - Skill
      operationId: postSkillCollection
      summary: Creates a Skill resource.
      responses:
        '201':
          description: Skill resource created
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Skill'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Skill'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Skill'
            application/xml:
              schema:
                $ref: '#/components/schemas/Skill'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Skill'
            text/csv:
              schema:
                $ref: '#/components/schemas/Skill'
            text/html:
              schema:
                $ref: '#/components/schemas/Skill'
          links:
            GetSkillItem:
              parameters:
                id: $response.body#/id
              operationId: getSkillItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /skills/{id}`.'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Skill'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Skill'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Skill'
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Skill'
          application/xml:
            schema:
              $ref: '#/components/schemas/Skill'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Skill'
          text/csv:
            schema:
              $ref: '#/components/schemas/Skill'
          text/html:
            schema:
              $ref: '#/components/schemas/Skill'
        description: The new Skill resource
  '/skills/{id}':
    get:
      tags:
        - Skill
      operationId: getSkillItem
      summary: Retrieves a Skill resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
        - name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
          schema:
            type: string
        - name: 'extend[]'
          required: false
          description: An array of nested objects to include in the return object
          in: query
          schema:
            type: array
        - name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        - name: validOn
          required: false
          description: Returns object as valid on a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validFrom
          required: false
          description: Returns objects valid from a given date time
          schema:
            type: string
            format: date-time
          in: query
        - name: validUntil
          required: false
          description: Returns objects valid until a given date time
          schema:
            type: string
            format: date-time
          in: query
      responses:
        '200':
          description: Skill resource response
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Skill'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Skill'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Skill'
            application/xml:
              schema:
                $ref: '#/components/schemas/Skill'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Skill'
            text/csv:
              schema:
                $ref: '#/components/schemas/Skill'
            text/html:
              schema:
                $ref: '#/components/schemas/Skill'
        '404':
          description: Resource not found
    delete:
      tags:
        - Skill
      operationId: deleteSkillItem
      summary: Removes the Skill resource.
      responses:
        '204':
          description: Skill resource deleted
        '404':
          description: Resource not found
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
    put:
      tags:
        - Skill
      operationId: putSkillItem
      summary: Replaces the Skill resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Skill resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Skill'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Skill'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Skill'
            application/xml:
              schema:
                $ref: '#/components/schemas/Skill'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Skill'
            text/csv:
              schema:
                $ref: '#/components/schemas/Skill'
            text/html:
              schema:
                $ref: '#/components/schemas/Skill'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Skill'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Skill'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Skill'
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Skill'
          application/xml:
            schema:
              $ref: '#/components/schemas/Skill'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Skill'
          text/csv:
            schema:
              $ref: '#/components/schemas/Skill'
          text/html:
            schema:
              $ref: '#/components/schemas/Skill'
        description: The updated Skill resource
    patch:
      tags:
        - Skill
      operationId: patchSkillItem
      summary: Updates the Skill resource.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          description: The JWT of the entity performing the request
          in: header
          schema:
            type: string
        - name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
          schema:
            type: string
        - name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Process-Id
          description: A process id for purpose registration (doelbinding)
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Elements
          description: A list of requested data elements
          in: header
          schema:
            type: string
        - name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
          schema:
            type: string
        - name: X-NLX-Audit-Clarification
          description: A clarification as to why a request has been made  (doelbinding)
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Skill resource updated
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Skill'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Skill'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Skill'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Skill'
            application/xml:
              schema:
                $ref: '#/components/schemas/Skill'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Skill'
            text/csv:
              schema:
                $ref: '#/components/schemas/Skill'
            text/html:
              schema:
                $ref: '#/components/schemas/Skill'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/xml:
            schema:
              $ref: '#/components/schemas/Skill'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Skill'
          text/csv:
            schema:
              $ref: '#/components/schemas/Skill'
          text/html:
            schema:
              $ref: '#/components/schemas/Skill'
        description: The updated Skill resource
components:
  schemas:
    Application:
      type: object
      description: ''
      required:
        - status
        - motivation
      properties:
        status:
          description: Status of the application
          type: string
        motivation:
          description: Motivation for the application
          type: string
        jobPosting:
          description: the JobPosting associated to this application
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/JobPosting'
        employee:
          $ref: '#/components/schemas/Employee'
    AuditTrail:
      type: object
      description: An resource representing a log line.
    Competence:
      type: object
      description: ''
      required:
        - name
        - description
        - grade
      properties:
        name:
          description: name of the competence
          type: string
        description:
          description: Description of the competence
          type: string
        grade:
          description: Grade of the competence
          type: string
        employee:
          description: The Employee to which this Competence belongs to
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/Employee'
    Contract:
      type: object
      description: ''
      required:
        - name
        - description
        - employer
        - organization
        - standardHours
        - agreement
        - jobFunction
        - duration
        - salary
      properties:
        name:
          description: Name of the contract
          type: string
        description:
          description: Description of the contract
          type: string
        employer:
          description: name of the employer
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        organization:
          description: The organisation where this contract belongs to
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        standardHours:
          description: The standard amount of hours per week for this contract
          type: integer
        agreement:
          description: agreement of the contract
          type: string
        jobFunction:
          description: function of the contract
          type: string
        duration:
          description: how many months the contract is set to.
          type: integer
        salary:
          description: Salary of the function.
          type: integer
        employee:
          $ref: '#/components/schemas/Employee'
    Education:
      type: object
      description: ''
      properties:
        name:
          description: The name of the education
          type: string
        description:
          description: The description of the education
          type: string
          nullable: true
        startDate:
          description: The moment this education starts.
          type: string
          format: date-time
          nullable: true
        endDate:
          description: The moment this education ends.
          type: string
          format: date-time
          nullable: true
        institution:
          description: The institution of this Education.
          type: string
          nullable: true
        degreeGrantedStatus:
          description: 'The degree granted status of this education. **Granted**, **notGranted**'
          type: string
          nullable: true
        iscedEducationLevelCode:
          description: The Isced Education Level Code of this Education.
          type: string
          nullable: true
        employee:
          $ref: '#/components/schemas/Employee'
    Employee:
      type: object
      description: 'All properties that the entity Employee holds. An Employee is a human with goals, skills and/or interests.'
      required:
        - person
      properties:
        person:
          description: The person that is employed
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        organization:
          description: The organisation where this person is employed
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        goals:
          type: array
          items:
            $ref: '#/components/schemas/Goal'
        interests:
          type: array
          items:
            $ref: '#/components/schemas/Interest'
        competencies:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Competence'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        jobFunctions:
          type: array
          items:
            $ref: '#/components/schemas/JobFunction'
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/Contract'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Application'
        hasPoliceCertificate:
          description: 'Whether or not the employee has submitted a police certificate (certificate of good conduct, certificate of conduct, etc)'
          type: boolean
        educations:
          type: array
          items:
            $ref: '#/components/schemas/Education'
    Goal:
      type: object
      description: ''
      required:
        - name
        - description
        - priority
        - status
      properties:
        name:
          description: name of the goal
          type: string
        description:
          description: Description of the goal
          type: string
        priority:
          description: 'Priority of the goal **short-term**, **med-term**, **long-term**'
          type: string
        status:
          description: Status of the goal
          type: string
        employee:
          $ref: '#/components/schemas/Employee'
    Interest:
      type: object
      description: ''
      required:
        - name
        - description
      properties:
        name:
          description: Name of the interest
          type: string
        description:
          description: Description of the interest
          type: string
        employee:
          $ref: '#/components/schemas/Employee'
    JobFunction:
      type: object
      description: ''
      required:
        - name
        - description
      properties:
        name:
          description: Name of the Job Function
          type: string
        description:
          description: Description of the Job Function
          type: string
        esco:
          description: The ESCO where this Jobfunction is related too
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        employee:
          $ref: '#/components/schemas/Employee'
    JobPosting:
      type: object
      description: ''
      required:
        - name
        - title
        - employmentType
        - standardHours
      properties:
        name:
          description: The name of this Job Posting
          type: string
        description:
          description: The description of this JobPosting
          type: string
          nullable: true
        title:
          description: The title of this Job Posting
          type: string
        employmentType:
          description: 'The type of employment **full-time**, **part-time**, **temporary**, **seasonal**, **internship**'
          type: string
        educationRequirements:
          description: The education requirements of this JobPosting
          type: array
          items:
            type: string
          nullable: true
        summary:
          description: The summary requirements of this JobPosting
          type: string
          nullable: true
        baseSalary:
          description: Salary of the jobposting.
          type: integer
          nullable: true
        salaryCurrency:
          description: The salary currency(coded using ISO 4217 ) of this jobPosting
          type: string
          nullable: true
        jobLocationType:
          description: A description of the job location (e.g TELECOMMUTE for telecommute jobs).
          type: string
        hiringOrganization:
          description: The organization that hires the person
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        jobStartDate:
          description: The start date of the contract
          type: string
          format: date-time
        validThrough:
          description: The end date of the application procces
          type: string
          format: date-time
          nullable: true
        standardHours:
          description: The standard amount of hours per week for this JobPosting
          type: integer
    Skill:
      type: object
      description: ''
      required:
        - name
        - description
        - level
      properties:
        name:
          description: Name of the Skill
          type: string
        description:
          description: Description of the skill
          type: string
        level:
          description: 'Level of the skill **beginner**, **intermediate**, **advanced**'
          type: string
        esco:
          description: The ESCO where this Skill is related too
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        employee:
          description: The Employee to which this skill belongs to
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/Employee'
